@page "/Reg"
@using Caomei.ViewModel.HomeVMs
@inherits BasePage
@inject NavigationManager NavigationManager
@attribute [Public]
@layout EmptyLayout

<Title Text="@Title"></Title>

<div class="d-flex flex-column app-layout-login ">
    <div class="flex-fill  login-layout app-login-back">
        <header class="login-header">
            <a href="/">
                <img src="_content/Caomei.Shared/images/logo.svg" alt="" height="48">
            </a>
        </header>
        <div class="login-content">
            <div class="login-form">
                <h1>注册</h1>
                <ValidateForm Model="@Model" OnValidSubmit="@Submit">
                    <BootstrapInput @bind-Value="@Model.ITCode" />
                    <BootstrapInput @bind-Value="@Model.Name" />
                    <BootstrapInput @bind-Value="@Model.Password" type="password" />
                    <BootstrapInput @bind-Value="@Model.NewPasswordComfirm" type="password" />
                    @*                    <Captcha ImagesPath="@ImagesPath" @ref="Captcha" OnValid="@OnValid" Width="200" />
                    *@                    <Button ButtonType="ButtonType.Submit" Text="@WtmBlazor.Localizer["Sys.Register"]" style="width:100%;margin-top:20px;" IsAsync="true" />
                    <Button Text="@WtmBlazor.Localizer["Sys.Login"]" style="width:100%;margin-top:20px;" IsAsync="true" OnClick="Login" />
                </ValidateForm>
            </div>
        </div>
    </div>
</div>




<Toast />

@code {


    //private Captcha Captcha { get; set; }
    //private bool IsReg { get; set; } = false;

    private RegVM Model = new RegVM();

    ///// <summary>
    ///// 获得/设置 图床路径 默认值为 images
    ///// </summary>
    //public string ImagesPath { get; set; } = "_content/Caomei.Shared/images/Captcha";

    ///// <summary>
    ///// 获得/设置 图床路径 默认值为 Pic.jpg
    ///// </summary>
    //public string ImagesName { get; set; } = "Pic.jpg";

    //private void OnValid(bool ret)
    //{
    //    var result = ret ? "成功" : "失败";
    //    if (ret)
    //    {
    //        Task.Run(async () =>
    //        {
    //            await Task.Delay(1000);
    //            IsReg = true;
    //        });
    //    }
    //}

    //private static Random ImageRandomer { get; set; } = new Random();

    public string Title { get; set; }


    protected override void OnInitialized()
    {
        Title = $"Caomei - {WtmBlazor.Localizer["Sys.Register"]}";

        base.OnInitialized();
    }

    private async Task Submit(EditContext context)
    {
        //if (!IsReg)
        //{
        //    await WtmBlazor.Message(color:Color.Danger,contetn:"请通过安全验证");
        //    return;

        //}
        if (Model.Password != Model.NewPasswordComfirm)
        {
            await WtmBlazor.Message(color: Color.Danger, contetn: WtmBlazor.Localizer["Sys.PasswordNotSame"]);
            //IsReg = false;

            //Captcha?.Reset();

            return;

        }
        var rv = await WtmBlazor.Api.CallAPI<DynamicData>("/api/_Account/reg", HttpMethodEnum.POST, new { ITCode = Model.ITCode, Password = Model.Password, NewPasswordComfirm = Model.NewPasswordComfirm, Name = Model.Name });


        if (rv.StatusCode == System.Net.HttpStatusCode.OK)
        {
            await WtmBlazor.Message(color: Color.Success, contetn: WtmBlazor.Localizer["Sys.RegSuccess"]);

            await Task.Delay(1000);

            NavigationManager.NavigateTo("/Login");
        }
        else
        {
            //IsReg = false;

            //Captcha?.Reset();

            var err = rv.Errors.Form.Count == 0 ? WtmBlazor.Localizer["Sys.UnknownError"] : rv.Errors.Form.First().Value;
            await WtmBlazor.Message(color: Color.Danger, contetn: err);

        }



    }

    private void Login()
    {
        NavigationManager.NavigateTo("/Login");

    }
}


